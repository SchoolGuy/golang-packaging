#!/usr/bin/env ruby

require '/usr/lib/rpm/golang/rpmsysinfo.rb'
include RpmSysinfo
importpath = RpmSysinfo.get_go_importpath

# read stdin for filelist rpm feeds us for a (sub) package
filelist = []
ARGF.each do |l|
	# if line has "*.a"
	# buildroot + go_contribdir + golang.org/x/text/collate/colltab.a
	filelist << l.strip! if ( l.index(/\.a\n$/) && ! l.index(/test|example/) )
end

requires = []

unless filelist.empty? then

	requires << "golang(API) = 1.5"

	filelist.each do |f|
		# unarchive .a
		system("ar -x #{f} __.PKGDEF")
		# read imports
		File.open("__.PKGDEF","r:UTF-8") do |f1|
			f1.each do |l|
				if l.index(/import\s/)
					# import runtime "golang.org/x/net/uniform"
					if ( l.index(/(\.com|\.net|\.org|gopkg\.in)/) && ! l.index(importpath) )
						# import splice "github.com/hanwen/go-fuse/splice" // indirect
						if l.index("indirect")
							v = l.strip!.gsub(/\s\/\/\sindirect/,'').gsub(/"$/,'').gsub(/^.*"/,'')
						else
							v = l.strip!.gsub(/"$/,'').gsub(/^.*"/,'')
						end
						requires << "golang(" + v + ")"
					end
				end
			end
		end
		# clean
		File.delete("__.PKGDEF")
	end

	requires.each do |p|
		puts p	
	end

end
